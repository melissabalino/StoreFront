@model IEnumerable<StoreFront.Data.EF.Models.Merchant>

@{
    ViewData["Title"] = "Merchants";
}

<h1>Merchants</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<!-- AJAX - Step 06 - Add the message content div. -->
<div class="row">
    <div class="mx-auto col-md-6">
        <div id="MessageContent" class="text-center"></div>
    </div>
</div>

<table class="table" id="MerchantsTable">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.MerchantName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MerchantAddress1)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MerchantAddress2)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MerchantCity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MerchantState)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MerchantZip)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.MerchantPhone)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr id="Merchant-@item.MerchantId">
            <td>
                    <a asp-action="Details" asp-route-id="@item.MerchantId">@Html.DisplayFor(modelItem => item.MerchantName)</a>
                
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MerchantAddress1)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MerchantAddress2)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MerchantCity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MerchantState)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MerchantZip)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MerchantPhone)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.MerchantId">Edit</a> |
                    @if (ViewBag.Products.Contains(item.MerchantId))
                    {
                        <a disabled="disabled" class="text-danger">In Use</a>
                    }
                    else
                    {
                        <a asp-action="AjaxDelete" asp-route-id="@item.MerchantId"
                           data-ajax="true"
                           data-ajax-confirm="Are you sure you want to delete @item.MerchantName?"
                           data-ajax-failure="deleteFailed"
                           data-ajax-success="deleteConfirmed"
                           data-ajax-method="POST">
                            Delete
                        </a>
                    }
            </td>
        </tr>
}
    </tbody>
</table>
@section Scripts {
    <script>
        //#region AJAX Delete
        //AJAX - Step 08 - code the deleteConfirmed() and deleteFailed() functions
        function deleteConfirmed(response, status, data) {
            //remove the row from the table
            let rowId = "#Merchant-" + response.id;
            console.log(rowId);
            $("#MerchantsTable").find(rowId).remove();

            //display the status message
            $("#MessageContent").removeClass().addClass('alert alert-success').text(response.message);
        }

        function deleteFailed(response, status, data) {
            $("#MessageContent").removeClass().addClass('alert alert-danger').text('Delete unsuccessful.');

        }
                        //#endregion
    </script>
}